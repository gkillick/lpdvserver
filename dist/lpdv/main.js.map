{"version":3,"sources":["./src/app/edit-order/edit-order.component.ts","./src/app/new-order/new-order.component.html","./src/app/register/register.component.ts","./src/app/register/register.component.html","./src/app/pipes/capitalize.pipe.ts","./src/app/auth-interceptor.service.ts","./src/environments/environment.ts","./src/app/models/item_order.model.ts","./src/app/services/item-orders.service.ts","./src/app/new-order/new-order.component.ts","./src/app/services/data.service.ts","./src/app/pipes/search-filter.pipe.ts","./src/app/login-gaurd.service.ts","./src/app/dashboard/dashboard.component.ts","./src/app/dashboard/dashboard.component.html","./src/app/items/items.component.ts","./src/app/items/items.component.html","./src/app/app.component.ts","./src/app/app.component.html","./src/app/edit-item/edit-item.component.ts","./src/app/edit-item/edit-item.component.html","./src/app/models/user.model.ts","./src/app/router.module.ts","./src/app/app.module.ts","./src/app/services/items.service.ts","./src/app/add-item/add-item.component.ts","./src/app/add-item/add-item.component.html","./src/app/auth.service.ts","./src/app/services/order.service.ts","./src/app/models/order.model.ts","./src/app/login/login.component.ts","./src/app/login/login.component.html","./src/app/models/item.model.ts","./src/main.ts","./src/app/auth-gaurd.service.ts","./$_lazy_route_resource lazy namespace object"],"names":[],"mappings":"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","file":"main.js","sourcesContent":["import { Component, ElementRef, Inject, OnInit } from '@angular/core';\nimport { FormBuilder, FormControl, FormGroup, Validators } from '@angular/forms';\nimport { MatDialogRef, MAT_DIALOG_DATA} from '@angular/material/dialog';\nimport { Item } from 'electron/main';\nimport { ItemOrder } from '../models/item_order.model';\nimport { Order } from '../models/order.model';\nimport { User } from '../models/user.model';\nimport { NewOrderComponent } from '../new-order/new-order.component';\nimport { DataService } from '../services/data.service';\nimport { ItemOrdersService } from '../services/item-orders.service';\nimport { ItemsService } from '../services/items.service';\nimport { OrderService } from '../services/order.service';\n\n@Component({\n  selector: 'app-edit-order',\n  templateUrl: '../new-order/new-order.component.html',\n  styleUrls: ['../new-order/new-order.component.scss']\n})\nexport class EditOrderComponent implements OnInit {\n\n  //form object\n  myForm: FormGroup;\n  order: Order\n  viewClass = \"Edit Order\"\n  edit = true\n  loading = false;\n  success = false;\n  total = 0;\n  sub_total = 0;\n  tax = 0;\n  searchText = '';\n\n  items = {\n    \"viennoiserie\": [],\n    \"pains\": [],\n    \"noel\": []\n  }\n  \n\n  constructor(private orderService: OrderService,private itemsService: ItemsService,private itemOrdersService: ItemOrdersService, private fb: FormBuilder, private dialogRef: MatDialogRef<EditOrderComponent>, @Inject(MAT_DIALOG_DATA) public data) {\n    this.order = this.orderService.getOrderById(data.id)\n    console.log(\"constructor running\")\n   }\n\n\n  ngOnInit(): void {\n\n    for(let item of this.itemsService.items){\n      for(let item_type in this.items){\n        if(item.item_type == item_type){\n          this.items[item_type].push(item)\n        }\n        this.items[item_type].sort((a,b) => {\n          return ('' + a.name).localeCompare(b.name);\n        })\n      }\n    }\n\n    var tomorrow = new Date();\n    tomorrow.setDate(new Date().getDate()+1);\n    tomorrow.setHours(0,0,0,0);\n\n    this.myForm = this.fb.group({\n      first_name: [this.order.first_name, Validators.required],\n      last_name: [this.order.last_name, Validators.required],\n      //client_number: ['', Validators.required],\n      telephone: [this.order.telephone, Validators.required],\n      date: [new Date(this.order.date), Validators.required],\n    });\n    for (var key in this.items) {\n      this.items[key].forEach(element => {\n        var found = false\n        for(let itemOrder of this.order.itemOrders){\n          if(itemOrder.item_id == element.id){\n            found = true\n            this.myForm.addControl(element.name, new FormControl(itemOrder.amount, ))\n          }\n        }\n        if(!found){\n            this.myForm.addControl(element.name, new FormControl('', ))\n        }\n\n      });\n  }\n  this.updateTotals();\n  this.onChanges();\n\n\n  }\n\n\n  submitHandler() {\n\n    this.loading = true;\n\n    const formValue = this.myForm.value;\n    formValue.sub_total = this.sub_total\n    formValue.tax = this.tax\n    formValue.total = this.total\n    formValue.date.setHours(0,0,0,0);\n    let order = Order.newOrder(formValue)\n    order.id = this.order.id\n    order.user_id = this.order.user_id\n    this.orderService.editOrder(order).subscribe(res => {\n      order = res\n      console.log(res)\n    var itemOrders = [];\n    for(let key in this.items){\n      console.log(key)\n      for(let item of this.items[key]){\n        if(formValue[item.name]){\n          itemOrders.push(new ItemOrder(null, order.user_id,item.name,item.combined_name ,order.id, item.id, formValue[item.name], false,res.date)) \n        }\n\n      }\n    }\n\n    order.itemOrders = itemOrders\n    this.orderService.orders = this.orderService.orders.filter(or => {\n      return !(order.id === or.id)\n    })\n    this.orderService.orders.push(order)\n    console.log(order)\n    this.orderService.orderChangedSubject.next(this.orderService.orders)\n    this.itemOrdersService.addItemOrders(itemOrders).subscribe(orders => {\n      console.log(itemOrders)\n    }, error => {\n      console.log(error)\n    })\n    }, error => {\n      //console.log(error)\n    })\n\n\n    try {\n      //use this object to create order\n      this.success = true;\n      this.dialogRef.close()\n    } catch(err) {\n      console.error(err)\n    }\n\n    this.loading = false;\n    \n\n    \n  }\n\n  increment(elmRef: HTMLInputElement){\n   \n    console.log(elmRef.value)\n    elmRef.value = (Number(elmRef.value) + 1).toString()\n  }\n\n  decrement(elmRef: HTMLInputElement){\n   \n    console.log(elmRef.value)\n    elmRef.value = (Number(elmRef.value) - 1).toString()\n  }\n\n\n  delete(){\n    this.orderService.deleteOrder(this.order).subscribe()\n\n    this.dialogRef.close()\n  \n  }\n\n\n  tax_classifications: any[] = [\n    {value: 'normal', viewValue: 'normal'},\n    {value: 'no_tax_6', viewValue: 'tax before 6'},\n    {value: 'no_tax', viewValue: 'no tax'},\n  ]\n\n\n  //functions for calculating order totals with relevant taxes\n\n  onChanges(): void {\n    this.myForm.valueChanges.subscribe(val => {\n      this.updateTotals()\n      });\n\n  }\n\n  \n\n//function to update total prices \nupdateTotals(){\n  var before_tax = 0;\n  var tax = 0;\n  var tax_items = {\n    \"no_tax\": {\"count\": 0, \"total\": 0},\n    \"normal\": {\"count\": 0, \"total\": 0},\n    \"no_tax_6\": {\"count\": 0, \"total\": 0},\n  }\n  let formValue = this.myForm.value;\n  for(let key in this.items){\n    for(let item of this.items[key]){\n      if(formValue[item.name] > 0 && item.tax_catagory != null){\n        tax_items[item.tax_catagory][\"count\"] += formValue[item.name];\n        tax_items[item.tax_catagory][\"total\"] += (formValue[item.name] * item.price)\n      }\n    }\n  }\n  before_tax += tax_items.no_tax_6.total + tax_items.no_tax.total + tax_items.normal.total\n\n  //calculate individual taxes \n  if(tax_items.no_tax_6.count < 6){\n    tax += tax_items.no_tax_6.total * .14975\n  }\n  console.log(tax)\n  tax += tax_items.normal.total * .14975\n  this.tax = tax;\n  this.sub_total = before_tax;\n  this.total = this.tax + this.sub_total;\n\n\n}\n\n  \n\n}\n\n","<h1>{{viewClass}}</h1>\n\n<form [formGroup]=\"myForm\" (ngSubmit)=\"submitHandler()\" class=\"form-flex\">\n    <div class=\"row top\">\n        <div class=\"col-sm\">\n            <mat-form-field>\n                <input matInput placeholder=\"First Name\" formControlName=\"first_name\">\n            </mat-form-field>\n            <mat-form-field>\n                <input matInput placeholder=\"Last Name\" formControlName=\"last_name\">\n            </mat-form-field>\n\n            <mat-form-field>\n                <input type=\"telephone\" matInput placeholder=\"téléphone\" formControlName=\"telephone\">\n            </mat-form-field>\n            <mat-form-field>\n                <mat-label>Choose a date</mat-label>\n                <input matInput [matDatepicker]=\"picker\" formControlName=\"date\">\n                <mat-datepicker-toggle matSuffix [for]=\"picker\"></mat-datepicker-toggle>\n                <mat-datepicker #picker></mat-datepicker>\n            </mat-form-field>\n            <mat-form-field>\n                <input matInput placeholder=\"Filter items\" [ngModelOptions]=\"{standalone: true}\" [(ngModel)]=\"searchText\">\n            </mat-form-field>\n            <!-- Don't think we need this field\n            <mat-form-field>\n                <input type=\"telephone\" matInput placeholder=\"Numéro client\" formControlName=\"client_number\">\n            </mat-form-field>\n            -->\n        </div>\n    </div>\n    <div class=\"row flex-row\">\n        <div class=\"col-sm\">\n\n            <h4>Viennoiserie</h4>\n            <mat-dialog-content>\n                <mat-form-field class=\"w-100\" *ngFor=\"let item of items.viennoiserie | searchFilter: searchText\">\n                    <input type=\"number\" autocomplete=\"off\" matInput placeholder=\" {{item.name}} \" formControlName=\"{{item.name}}\">\n                </mat-form-field>\n            </mat-dialog-content>\n        </div>\n        <div class=\"col-6 wrap\">\n            <h4>Pains</h4>\n            <mat-dialog-content>\n                <mat-form-field class=\"w-100\" *ngFor=\"let item of items.pains| searchFilter: searchText \" [class.sliced]=\"item.sliced_option\">\n                    <input type=\"number\" autocomplete=\"off\" matInput placeholder=\" {{item.name}} \" formControlName=\"{{item.name}}\">\n                </mat-form-field>\n            </mat-dialog-content>\n        </div>\n        <div class=\"col-sm\">\n            <h4>Nöel</h4>\n            <mat-dialog-content>\n                <mat-form-field class=\"w-100\" *ngFor=\"let item of items.noel | searchFilter: searchText\">\n                    <input type=\"number\" matInput autocomplete=\"off\" placeholder=\" {{item.name}} \" formControlName=\"{{item.name}}\">\n                </mat-form-field>\n            </mat-dialog-content>\n\n            <!--<div class=\"item-field\">\n                        <label for=\"bread\">{{item.name}}</label>\n                        <input class=\"ml-1\" type=\"number\" id=\"bread\" matInput autocomplete=\"off\" placeholder=\"0\" #input formControlName=\"{{item.name}}\">\n                        <div class=\"incrementers ml-1\">\n                            <svg (click)=\"increment(input)\" width=\"1em\" height=\"1em\" viewBox=\"0 0 16 16\" class=\"ml-1 bi bi-plus-circle\" fill=\"currentColor\" xmlns=\"http://www.w3.org/2000/svg\">\n                            <path fill-rule=\"evenodd\" d=\"M8 15A7 7 0 1 0 8 1a7 7 0 0 0 0 14zm0 1A8 8 0 1 0 8 0a8 8 0 0 0 0 16z\"/>\n                            <path fill-rule=\"evenodd\" d=\"M8 4a.5.5 0 0 1 .5.5v3h3a.5.5 0 0 1 0 1h-3v3a.5.5 0 0 1-1 0v-3h-3a.5.5 0 0 1 0-1h3v-3A.5.5 0 0 1 8 4z\"/>\n                          </svg>\n\n                            <svg (click)=\"decrement(input)\" width=\"1em\" height=\"1em\" viewBox=\"0 0 16 16\" class=\"ml-1 bi bi-dash-circle\" fill=\"currentColor\" xmlns=\"http://www.w3.org/2000/svg\">\n                            <path fill-rule=\"evenodd\" d=\"M8 15A7 7 0 1 0 8 1a7 7 0 0 0 0 14zm0 1A8 8 0 1 0 8 0a8 8 0 0 0 0 16z\"/>\n                            <path fill-rule=\"evenodd\" d=\"M4 8a.5.5 0 0 1 .5-.5h7a.5.5 0 0 1 0 1h-7A.5.5 0 0 1 4 8z\"/>\n                          </svg>\n\n                        </div>\n                    </div>\n                -->\n        </div>\n\n    </div>\n\n    <div class=\"row\">\n        <div class=\"col\">\n            <button mat-button class=\"btn btn-primary\" color=\"primary\" type=\"submit\" [disabled]=\"myForm.invalid\">Save Order</button>\n            <button *ngIf=\"edit\" mat-button type=\"button\" class=\"btn btn-danger ml-1\" (click)=\"delete()\">Delete</button>\n        </div>\n        <div class=\"col-sm \">\n            <div class=\"total_price \">\n                <span class=\"subheading \">Subtotal: </span><span class=\"subheadingbold \">{{ sub_total | currency }} </span>\n                <span class=\"subheading \">Tax: </span><span class=\"subheadingbold \">{{tax | currency }} </span>\n                <span class=\"subheading \">Total: </span><span class=\"subheadingbold \">{{ total | currency }} </span>\n\n            </div>\n        </div>\n    </div>\n\n</form>","import { Component, OnInit } from '@angular/core';\nimport { Router } from '@angular/router';\nimport {NgForm} from '@angular/forms'\nimport { AuthService } from '../auth.service';\n\n@Component({\n  selector: 'app-register',\n  templateUrl: './register.component.html',\n  styleUrls: ['./register.component.scss']\n})\nexport class RegisterComponent implements OnInit {\n\n  errorMessage: string\n\n  constructor(private router: Router, private authService: AuthService) { }\n\n  ngOnInit(): void {\n  }\n\n\n  login(){\n    this.router.navigate(['login'])\n  }\n\n  onSubmit(form: NgForm){\n\n    const {username, password, passwordConf} = form.value\n    console.log(username)\n    console.log(password)\n\n    const passwordConsitent = password === passwordConf\n\n    if(!passwordConsitent){\n      this.errorMessage = \"password must be the same as confirmation password\"\n    }\n\n    if(passwordConsitent && form.valid){\n      this.authService.signup(username, password).subscribe(res => {\n        console.log(res)\n        this.router.navigate(['/dashboard'])\n      }, errorRes => {\n        this.errorMessage = errorRes\n      })\n    }\n\n\n\n    form.reset()\n  }\n\n}\n","\n<div class=\"container\">\n    <div class=\"row\">\n        <div class=\"col-xs-12 col-md-6 col-md-offset-3\">\n            <div *ngIf=\"errorMessage\" class=\"alert alert-danger\">\n                <p>{{errorMessage}}</p>\n            </div>\n            <form #authForm=\"ngForm\" (ngSubmit)=\"onSubmit(authForm)\">\n                <div class=\"form-group\">\n                    <label for=\"username\">Username</label>\n                    <input\n                    type=\"text\"\n                    id=\"username\"\n                    class=\"form-control\"\n                    ngModel\n                    name=\"username\"\n                    required\n                    >\n                </div>\n                <div class=\"form-group\">\n                    <label for=\"password\">Password</label>\n                    <input\n                    type=\"password\"\n                    id=\"password\"\n                    class=\"form-control\"\n                    ngModel\n                    name=\"password\"\n                    required\n                    minlength=\"6\"\n                    #password=\"ngModel\"\n                    >\n                </div>\n                <span *ngIf=\"!password.valid && password.touched\" class=\"help-block alert alert-danger\">Password must be at least 6 characters</span>\n                <div class=\"form-group\">\n                    <label for=\"passwordConf\">Password Confirmation</label>\n                    <input\n                    type=\"password\"\n                    id=\"passwordConf\"\n                    class=\"form-control\"\n                    ngModel\n                    name=\"passwordConf\"\n                    required\n                    minlength=\"6\"\n                    #passwordConf=\"ngModel\"\n                    >\n                </div>\n                <span *ngIf=\"!passwordConf.valid && passwordConf.touched\" class=\"help-block alert alert-danger\">Password Confirmation must be at least 6 characters</span>\n                <div>\n                    <button class=\"btn btn-primary\" type=\"submit\" [disabled]=\"authForm.invalid\">Submit</button>\n                    <button class=\"btn btn-primary\" type=\"button\" (click)=\"login()\">Login</button>\n                </div>\n            </form>\n        </div>\n    </div>\n</div>","import { Pipe, PipeTransform } from '@angular/core';\n\n@Pipe({\n  name: 'capitalize'\n})\nexport class CapitalizePipe implements PipeTransform {\n\n  transform(value: string, ...args: unknown[]): unknown {\n    return value.charAt(0).toUpperCase() + value.slice(1);\n  }\n\n}\n","import { HttpHandler, HttpHeaders, HttpInterceptor, HttpParams, HttpRequest } from '@angular/common/http';\nimport {Injectable} from '@angular/core'\nimport { AuthService } from './auth.service';\nimport {exhaustMap, take} from 'rxjs/operators'\n\n@Injectable()\n\n\nexport class AuthInterceptorService implements HttpInterceptor{\n    constructor(private authService: AuthService){}\n\n    intercept(req: HttpRequest<any>, next: HttpHandler){\n\n        return this.authService.user.pipe(take(1), exhaustMap(user => {\n            if(!user){\n                console.log('no user')\n                return next.handle(req)\n            }else{\n                console.log(user.token)\n                const modifiedReq = req.clone({headers: new HttpHeaders({'auth-token': user.token})}) \n                return next.handle(modifiedReq)\n            }\n        }))\n    }\n\n\n\n}","// This file can be replaced during build by using the `fileReplacements` array.\n// `ng build --prod` replaces `environment.ts` with `environment.prod.ts`.\n// The list of file replacements can be found in `angular.json`.\n\nexport const environment = {\n  production: false\n};\n\n/*\n * For easier debugging in development mode, you can import the following file\n * to ignore zone related error stack frames such as `zone.run`, `zoneDelegate.invokeTask`.\n *\n * This import should be commented out in production mode because it will have a negative impact\n * on performance if an error is thrown.\n */\n// import 'zone.js/dist/zone-error';  // Included with Angular CLI.\n","import { Item } from './item.model';\nimport { Order } from './order.model';\n\nexport class ItemOrder{\n\n    //item order will have a reference to the item it belongs to and contain sliced data if needed\n\n    constructor(\n        public id:string,\n        public user_id:string,\n        public itemName: string,\n        public combined_name,\n        public order_id: string,\n        public item_id: string,\n        public amount: number,\n        public sliced: boolean,\n        public date: Date,\n    ){}\n\n    static newItemOrder(params: any){\n        return new ItemOrder(params.id, params.user_id, params.string, params.combined_name, params.order_id, params.item_id, params.amount, params.sliced, params.date)\n    }\n}","import { HttpClient, HttpErrorResponse } from '@angular/common/http';\nimport { Injectable, OnInit } from '@angular/core';\nimport { ItemOrder } from '../models/item_order.model';\nimport {map, tap, catchError} from 'rxjs/operators'\nimport { Subject, throwError } from 'rxjs';\nimport { nextTick } from 'process';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class ItemOrdersService {\n\n\n  itemOrders: ItemOrder[]\n  itemOrderSubject: Subject<ItemOrder[]> = new Subject<ItemOrder[]>()\n\n  constructor(private http: HttpClient) { \n\n    this.itemOrders = []\n    console.log(this.itemOrders)\n  }\n\n  addItemOrders(itemOrde: ItemOrder[]){\n    const orders = {orders: itemOrde}\n\n    this.itemOrders = this.itemOrders.filter(itemOr => {\n      return !(itemOr.order_id === itemOrde[0].order_id)\n    })\n    return this.http.post('/api/itemOrders/add', orders).pipe(catchError(this.handleErrors), tap(res => {\n      for(let itemOrder of res['itemOrders']){\n        console.log(itemOrder)\n        console.log(this.itemOrders)\n        this.itemOrders.push(itemOrder)\n      }\n      this.itemOrderSubject.next(this.itemOrders)\n    }))\n  }\n\n  getItemOrders(){\n    return this.http.get('api/itemOrders').pipe(catchError(this.handleErrors), tap(res => {\n      this.itemOrders = []\n      console.log(res['itemOrders'])\n      this.itemOrders = res['itemOrders']\n      if(!this.itemOrders){\n        this.itemOrders = []\n      }\n\n      this.itemOrderSubject.next(this.itemOrders)\n    }))\n  }\n\n  deleteItemOrdersForOrder(ord_id){\n    this.itemOrders = this.itemOrders.filter(itemOrder => {\n      return !(itemOrder.order_id === ord_id)\n    })\n  }\n\n  handleErrors(errorRes: HttpErrorResponse){\n\n\n    let errorMessage = \"an unknown error occured\"\n\n    if(!errorRes.error || !errorRes.error.error){\n      return throwError(errorRes)\n    }\n\n    switch(errorRes.error.error){\n      case \"ITEM_EXISTS\":\n        errorMessage = \"The item already exists\"\n\n    }\n\n    throw(errorMessage)\n\n}\n}\n","import { Component, ElementRef, OnInit, ViewChild } from '@angular/core';\nimport { FormBuilder, FormControl, FormGroup, Validators } from '@angular/forms';\nimport { MatDialogRef } from '@angular/material/dialog';\nimport { ɵELEMENT_PROBE_PROVIDERS__POST_R3__ } from '@angular/platform-browser';\nimport { getMaxListeners } from 'process';\nimport { Item } from '../models/item.model';\nimport { ItemOrder } from '../models/item_order.model';\nimport { Order } from '../models/order.model';\nimport { User } from '../models/user.model';\nimport { DataService } from '../services/data.service';\nimport { ItemOrdersService } from '../services/item-orders.service';\nimport { ItemsService } from '../services/items.service';\nimport { OrderService } from '../services/order.service';\n\n@Component({\n  selector: 'app-new-order',\n  templateUrl: './new-order.component.html',\n  styleUrls: ['./new-order.component.scss']\n})\nexport class NewOrderComponent implements OnInit {\n\n  //form object\n  myForm: FormGroup;\n  viewClass = \"New Order\"\n  edit = false\n  loading = false;\n  success = false;\n  total = 0;\n  sub_total = 0;\n  tax = 0;\n  searchText = '';\n  @ViewChild('input' ) elemRef: ElementRef;\n\n\n  items = {\n    \"viennoiserie\": [],\n    \"pains\": [],\n    \"noel\": []\n  }\n  itemtypes = [\"viennoiserie\", \"pains\", \"noel\"]\n\n  \n\n  constructor(private itemsService: ItemsService, private itemOrdersService: ItemOrdersService, private orderService: OrderService, private fb: FormBuilder, private dialogRef: MatDialogRef<NewOrderComponent>) { }\n\n\n  ngOnInit(): void {\n\n    for(let item of this.itemsService.items){\n      for(let item_type in this.items){\n        if(item.item_type == item_type){\n          this.items[item_type].push(item)\n        }\n        this.items[item_type].sort((a,b) => {\n          if(a.combined_name == b.combined_name){\n            return ('' + a.sliced).localeCompare(b.sliced)\n          }else{\n          return ('' + a.combined_name).localeCompare(b.combined_name);\n          }\n        })\n      }\n\n\n    }\n\n\n\n\n\n\n    var tomorrow = new Date();\n    tomorrow.setDate(new Date().getDate()+1);\n    tomorrow.setHours(0,0,0,0);\n\n    this.myForm = this.fb.group({\n      first_name: ['', Validators.required],\n      last_name: ['', Validators.required],\n      //client_number: ['', Validators.required],\n      telephone: ['', Validators.required],\n      date: [tomorrow, Validators.required],\n    });\n    console.log(this.items)\n    for (var key in this.items) {\n\n      this.items[key].forEach(element => {\n        console.log(element.item_type)\n        this.myForm.addControl(element.name, new FormControl('', ))\n      });\n  }\n  this.onChanges();\n\n\n  }\n\n  async submitHandler() {\n    this.loading = true;\n\n    const formValue = this.myForm.value;\n    formValue.sub_total = this.sub_total\n    formValue.tax = this.tax\n    formValue.total = this.total\n    formValue.date.setHours(0,0,0,0);\n    let order = Order.newOrder(formValue)\n    this.orderService.addOrder(order).subscribe(res => {\n      order = res\n    var itemOrders = [];\n    for(let key in this.items){\n      console.log(key)\n      for(let item of this.items[key]){\n        console.log(item.id)\n        console.log(formValue[item.name])\n        if(formValue[item.name]){\n          itemOrders.push(new ItemOrder(null, order.user_id, item.name, item.combined_name,order.id, item.id, formValue[item.name], false,res.date)) \n        }\n\n      }\n    }\n\n    order.itemOrders = itemOrders\n    this.orderService.orders.push(order)\n    this.orderService.orderChangedSubject.next(this.orderService.orders)\n    this.itemOrdersService.addItemOrders(itemOrders).subscribe(orders => {\n    }, error => {\n      console.log(error)\n    })\n    }, error => {\n      //console.log(error)\n    })\n\n\n    console.log(\"Order:\")\n    console.log(order)\n\n\n    try {\n      //use this object to create order\n      this.success = true;\n      this.dialogRef.close()\n    } catch(err) {\n      console.error(err)\n    }\n\n    this.loading = false;\n    \n  }\n  increment(elmRef: HTMLInputElement){\n   \n    console.log(elmRef.value)\n    elmRef.value = (Number(elmRef.value) + 1).toString()\n  }\n\n  decrement(elmRef: HTMLInputElement){\n   \n    console.log(elmRef.value)\n    elmRef.value = (Number(elmRef.value) - 1).toString()\n  }\n\n  formatDate(date: Date): string{\n    var d = new Date(date),\n    month = '' + (d.getMonth() + 1),\n    day = '' + d.getDate(),\n    year = d.getFullYear();\n\n    if (month.length < 2) \n      month = '0' + month;\n    if (day.length < 2) \n      day = '0' + day;\n\n    return [year, month, day].join('-');\n  }\n\n  tax_classifications: any[] = [\n    {value: 'normal', viewValue: 'normal'},\n    {value: 'no_tax_6', viewValue: 'tax before 6'},\n    {value: 'no_tax', viewValue: 'no tax'},\n  ]\n\n\n  //functions for calculating order totals with relevant taxes\n\n  onChanges(): void {\n    this.myForm.valueChanges.subscribe(val => {\n      var before_tax = 0;\n      var tax = 0;\n      var tax_items = {\n        \"no_tax\": {\"count\": 0, \"total\": 0},\n        \"normal\": {\"count\": 0, \"total\": 0},\n        \"no_tax_6\": {\"count\": 0, \"total\": 0},\n      }\n      let formValue = this.myForm.value;\n      for(let key in this.items){\n        for(let item of this.items[key]){\n          if(formValue[item.name] > 0 && item.tax_catagory != null){\n            tax_items[item.tax_catagory][\"count\"] += formValue[item.name];\n            tax_items[item.tax_catagory][\"total\"] += (formValue[item.name] * item.price)\n          }\n        }\n      }\n      before_tax += tax_items.no_tax_6.total + tax_items.no_tax.total + tax_items.normal.total\n\n      //calculate individual taxes \n      if(tax_items.no_tax_6.count < 6){\n        tax += tax_items.no_tax_6.total * .14975\n      }\n      tax += tax_items.normal.total * .14975\n      this.tax = tax;\n      this.sub_total = before_tax;\n      this.total = this.tax + this.sub_total;\n      });\n\n\n  }\n\n\n  \n\n}\n","import { Injectable } from '@angular/core';\nimport {SENDING_ITEM, DELETE_ITEM, GET_KEYS_ORDERS, GET_KEYS_ITEMS, RESPONSE_KEYS_ITEMS, RESPONSE_KEYS_ORDERS, REQUEST_ITEM, RESPONSE_ITEM, RESPONSE_ORDER, REQUEST_ORDER} from '../../message-types'\nimport {IpcRenderer} from 'electron'\nimport { Subject } from 'rxjs';\nimport { Item } from '../models/item.model';\nimport { Order } from '../models/order.model';\nimport { ItemOrder } from '../models/item_order.model';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class DataService {\n\n  ipc: IpcRenderer\n  items: Item[] = []\n  itemsChanged: Subject<Item[]> = new Subject<Item[]>()\n  orders: Order[] = []\n  orderChanged: Subject<Order[]> = new Subject<Order[]>()\n  idTraker = 0\n  orderQuantities = []\n  orderCountQuantities: Subject<any> = new Subject<any>()\n  itemNames = []\n\n\n  constructor() { \n/*\n    if ((<any>window).require) {\n      try {\n        this.ipc = (<any>window).require('electron').ipcRenderer;\n      } catch (e) {\n        throw e;\n      }\n    } else {\n      console.warn('App not running inside Electron!');\n    }\n    */\n  }\n/*\n\n  getOrderById(id: number){\n\n    for(let order of this.orders){\n      if(+order.id == id){\n        return order\n      }\n    }\n\n    return null\n  }\n\n  getItemById(id: number){\n\n    for(let item of this.items){\n      if(+item.id == id){\n        return item\n      }\n    }\n\n    return null\n  }\n\n\n  addOrder(order: Order){\n\n    this.orders.push(order)\n    this.orderChanged.next(this.orders)\n    console.log('order changed')\n    console.log(order)\n\n    const itemWithId = {\n      key: order.id, \n        payload: {\n          type: 'ORDER',\n          data : order \n      }\n    }\n\n\n\n    this.ipc.send(SENDING_ITEM,  itemWithId)\n\n  }\n\n  deleteOrderById(id: string){\n\n\n    this.orders = this.orders.filter(order => {\n      console.log(+order.id == +id)\n      return +order.id !== +id\n    })\n\n    this.orderChanged.next(this.orders)\n\n    console.log(this.orders)\n    console.log(id)\n\n\n    this.ipc.send(DELETE_ITEM, id)\n\n  }\n\n  saveOrder(order: Order){\n\n    console.log(order)\n    var index = 0\n    for(let ord of this.orders){\n      if(ord.id == order.id){\n        console.log(index)\n        break\n      }\n      index +=1\n    }\n\n    this.orders[index] = order\n\n\n    this.orderChanged.next(this.orders)\n\n    const key: string = order.id\n\n    const orderWithId = {\n      key: key,\n        payload: {\n          type: 'ORDER',\n          data : order \n      }\n    }\n\n    this.ipc.send(SENDING_ITEM,  orderWithId)\n  }\n\n\n\n  addItem(item: Item){\n\n    this.items.push(item)\n    this.itemsChanged.next(this.items)\n\n    console.log(item)\n\n    const itemWithId = {\n      key: item.id, \n        payload: {\n          type: 'ITEM',\n          data : item\n      }\n    }\n\n    this.itemNames.push(item.name)\n\n    this.ipc.send(SENDING_ITEM,  itemWithId)\n\n  }\n\n  saveItem(item: Item){\n\n\n    var index = 0\n    for(let it of this.items){\n      if(it.id == item.id){\n        console.log(index)\n        break\n      }\n      index +=1\n    }\n\n    this.items[index] = item\n\n    this.itemsChanged.next(this.items)\n\n    const itemWithId= {\n      key: item.id,\n        payload: {\n          type: 'ITEM',\n          data :item \n      }\n    }\n    \n    this.updateItemNames()\n\n\n    this.ipc.send(SENDING_ITEM,  itemWithId)\n  }\n\n  updateItemNames(){\n\n    this.itemNames = []\n\n    for(let item of this.items){\n      this.itemNames.push(item.name)\n    }\n\n    console.log(this.itemNames)\n  }\n\n  deleteItemById(id: string){\n\n    console.log(this.items)\n    this.items = this.items.filter(item=> {\n      console.log(+item.id !== +id)\n      return +item.id !== +id\n    })\n\n    console.log(this.items)\n\n\n    this.ipc.send(DELETE_ITEM, id)\n\n    this.itemsChanged.next(this.items)\n\n  }\n\n\n\n  getStoredData(){\n\n    this.ipc.on(RESPONSE_KEYS_ITEMS, (event, keys) => {\n      console.log(keys)\n\n      for(let key of keys){\n        this.ipc.send(REQUEST_ITEM, key)\n        if(this.idTraker <= key){\n          this.idTraker = +key + 1\n        }\n      }\n    this.ipc.send(GET_KEYS_ORDERS)\n\n    })\n\n    this.ipc.on(RESPONSE_KEYS_ORDERS, (event, keys) => {\n\n      for(let key of keys){\n        this.ipc.send(REQUEST_ORDER, key)\n        if(this.idTraker <= key){\n          this.idTraker = +key + 1\n        }\n      }\n    })\n\n    this.ipc.on(RESPONSE_ITEM, (event, msg) => {\n\n      const {type, data} = msg \n\n      if(type === \"ITEM\"){\n        //data.name, data.item_type, data.price\n        this.itemNames.push(data.name)\n        console.log(data)\n        const item = new Item(data.id ,data.name, data.item_type, data.price, data.sliced, data.tax_catagory)\n        this.items.push(item)\n        this.itemsChanged.next(this.items)\n        console.log(this.items)\n\n\n      }\n      \n\n    })\n\n    this.ipc.on(RESPONSE_ORDER, (event, msg) => {\n\n      const {type, data, id} = msg \n\n      if(type === \"ORDER\"){\n\n        //find id for order here and pass id to item order\n        console.log(id)\n        const order = new Order(id, data.user_id, data.first_name, data.last_name, data.telephone, new Date(data.date), [], data.before_tax, data.tax, data.total)\n        \n\n        for(let item of this.items){\n          console.log(data.itemOrders)\n          for(let itemOrder of data.itemOrders){\n            if(item.id === itemOrder.item_id){\n\n              order.addItemOrder(new ItemOrder(null, item.name, null , +item.id, +itemOrder.amount, itemOrder.sliced))\n            }\n          }\n        }\n\n        this.orders.push(order)\n        this.orderChanged.next(this.orders)\n      }\n\n\n    })\n\n\n    this.ipc.send(GET_KEYS_ITEMS)\n  }\n\n  sendDataToPrint(data: any){\n\n    this.ipc.send(\"printPDF\", data)\n  }\n  \n*/\n}\n","import { Pipe, PipeTransform } from '@angular/core';\n\n@Pipe({\n  name: 'searchFilter'\n})\nexport class SearchFilterPipe implements PipeTransform {\n  transform(items: any[], searchText: string): any[] {\n    if (!items) {\n      return [];\n    }\n    if (!searchText) {\n      return items;\n    }\n    searchText = searchText.toLocaleLowerCase();\n\n    return items.filter(it => {\n      return it.name.toLocaleLowerCase().includes(searchText);\n    });\n  }\n\n}\n","import { Injectable } from \"@angular/core\";\nimport { ActivatedRouteSnapshot, CanActivate, Router, RouterStateSnapshot } from '@angular/router';\nimport { Observable } from 'rxjs';\nimport { map, tap} from 'rxjs/operators';\nimport { AuthService } from './auth.service';\n\n@Injectable({providedIn: 'root'})\n\nexport class LoginGaurdService implements CanActivate{\n\n    constructor(private authService: AuthService, private router: Router){\n\n    }\n\n    canActivate(route: ActivatedRouteSnapshot, router: RouterStateSnapshot): boolean | Promise<boolean> | Observable<boolean>{\n\n        return this.authService.user.pipe(map(user => {\n\n            return !user\n        }), tap(isAuth => {\n\n            console.log(isAuth)\n\n            if(!isAuth){\n                this.router.navigate(['/dashboard'])\n                return false\n            }\n                return true\n        }))\n    }\n}","import { ChangeDetectorRef, Component, ElementRef, OnInit, ViewChild } from '@angular/core';\nimport { FormControl } from '@angular/forms';\nimport {MatDialog, MatDialogRef, MAT_DIALOG_DATA} from '@angular/material/dialog';\nimport { MatTable, MatTableDataSource } from '@angular/material/table';\nimport { Subject } from 'rxjs';\nimport { EditOrderComponent } from '../edit-order/edit-order.component';\nimport { Order } from '../models/order.model';\nimport { NewOrderComponent } from '../new-order/new-order.component';\nimport { DataService } from '../services/data.service';\nimport { NgZone } from '@angular/core';\nimport { ItemsService } from '../services/items.service';\nimport { OrderService } from '../services/order.service';\nimport { MatTabChangeEvent } from '@angular/material/tabs';\nimport { ItemOrdersService } from '../services/item-orders.service';\nimport { ItemOrder } from '../models/item_order.model';\nimport { MatSort } from '@angular/material/sort';\nimport { DatePipe } from '@angular/common';\nimport { Hash } from 'crypto';\n\n\n@Component({\n  selector: 'app-dashboard',\n  templateUrl: './dashboard.component.html',\n  styleUrls: ['./dashboard.component.scss'],\n  providers:[DatePipe]\n})\nexport class DashboardComponent implements OnInit {\n\n  itemQuantities: MatTableDataSource<any> = new MatTableDataSource<any>()\n  orders = []\n  all_orders: MatTableDataSource<any> = new MatTableDataSource<any>()\n  orderItemCountsList = []\n  ordersByDate: MatTableDataSource<any> = new MatTableDataSource<any>()\n  orderItemCounts: MatTableDataSource<any> = new MatTableDataSource<any>()\n  displayedColumns = [\"name\", \"amount\"];\n  displayedOrderColumns = [\"first_name\",\"last_name\",\"telephone\", \"summary\", \"total\", \"details\"]\n  displayedAllOrderColumns = [\"first_name\",\"last_name\",\"telephone\", \"summary\", \"total\",  \"date\", \"details\"]\n  orderDateFooterColumnsToDisplay = [\"total\"]\n  currentlySelctedDate: Date\n  dateForm: FormControl\n  activeTab: string = \"All Orders\"\n  itemOrders: ItemOrder[] = []\n  searchText: string = \"\"\n  total_for_date = 0;\n  stringDate = \"\"\n  filteredValues =\n  {\n    date: '',\n    searchText: '',\n  };\n\n\n  applyFilter() {\n    var filterValue = this.searchText\n    filterValue = filterValue.trim(); // Remove whitespace\n    filterValue = filterValue.toLowerCase(); // Datasource defaults to lowercase matches\n    this.all_orders.filter = filterValue;\n    this.orderItemCounts.filter = filterValue;\n    console.log('Here is the date:')\n    this.stringDate = new Date(this.currentlySelctedDate.setHours(0,0,0,0) ).toISOString()\n    this.filteredValues.date = new Date(this.currentlySelctedDate.setHours(0,0,0,0) ).toISOString()\n    this.filteredValues.searchText = this.searchText\n    this.ordersByDate.filter = JSON.stringify(this.filteredValues)\n\n\n  }\n\n  constructor(private datePipe: DatePipe, private itemsService: ItemsService, private ordersService: OrderService,private itemOrdersService: ItemOrdersService,public dialog: MatDialog, private dataService: DataService, private changeDetection: ChangeDetectorRef, private zone: NgZone ) { \n\n  }\n\n  ngOnInit(): void {\n    this.ordersByDate.filterPredicate = this.customFilterPredicate\n    this.itemsService.fetchItems().subscribe()\n    this.ordersService.getOrders().subscribe()\n    this.itemOrdersService.getItemOrders().subscribe()\n\n \n    this.currentlySelctedDate = new Date();\n    this.currentlySelctedDate.setDate(new Date().getDate()+1);\n \n    this.currentlySelctedDate.setHours(0,0,0,0);\n    this.dateForm = new FormControl(this.currentlySelctedDate)\n    this.getOrdersForCurrentlySelectedDate()\n\n    this.itemOrdersService.itemOrderSubject.subscribe((itemOrders) => {\n      this.itemOrders = itemOrders\n\n      this.getOrdersForCurrentlySelectedDate()\n      this.applyFilter()\n    })\n\n    this.ordersService.orderChangedSubject.subscribe(orders => {\n      this.getOrdersForCurrentlySelectedDate()\n\n      this.all_orders.data = orders\n      this.ordersByDate.data = orders\n      console.log(orders)\n      \n      this.changeDetection.detectChanges()\n    })\n\n  }\n  onTabChange(event: MatTabChangeEvent) {\n    this.activeTab = event.tab.textLabel;\n  }\n\n\n  onDateSelected(event){\n    this.currentlySelctedDate = event.value\n    console.log(event.value)\n\n    this.getOrdersForCurrentlySelectedDate()\n\n    this.changeDetection.detectChanges()\n  }\n\n  getOrdersForCurrentlySelectedDate(){\n    \n\n      var orders = this.ordersService.orders\n      console.log(orders)\n\n      var filteredOrders = orders.filter(order => {\n        let selectedDate = new Date(this.currentlySelctedDate)\n        let orderDate = new Date(order.date)\n        selectedDate.setHours(0,0,0,0)\n        orderDate.setHours(0,0,0,0)\n        return orderDate.toDateString() === selectedDate.toDateString()\n      })\n\n      var sortedOrders = filteredOrders.sort((a,b) => {\n        return +a.id - +b.id\n      })\n\n      this.orders = sortedOrders\n\n      this.orderItemCountsList = []\n      this.orderItemCounts.data = this.orderItemCountsList\n\n\n\n\n\n\n\n      for(let item of this.itemsService.items){\n        if(!item.sliced){\n          this.orderItemCountsList.push({id: item.id, name: item['combined_name'], amount: 0})\n        }\n      }\n\n      var filteredItemOrders = this.itemOrders.filter(iorder => {\n        let selectedDate = new Date(this.currentlySelctedDate)\n        let orderDate = new Date(iorder.date)\n        selectedDate.setHours(0,0,0,0)\n        orderDate.setHours(0,0,0,0)\n        return orderDate.toDateString() === selectedDate.toDateString()\n      })\n\n      for(let itemOrder of filteredItemOrders){\n        console.log('hi')\n        for(let orderItemCount of this.orderItemCountsList){\n          console.log(itemOrder.item_id)\n          console.log(orderItemCount.id)\n          if(itemOrder.combined_name === orderItemCount.name){\n            console.log('added')\n            orderItemCount.amount += itemOrder.amount\n          }\n        }\n      }\n\n\n    this.orderItemCounts.data = this.orderItemCountsList\n\n    this.applyFilter()\n\n  }\n\n  updateSearch(search: string){\n    this.searchText = search;\n    this.applyFilter()\n  }\n\n\n\n  openDialog(): void {\n    const dialogRef = this.dialog.open(NewOrderComponent, {\n      width: '100%',\n      height: '98%',\n    });\n\n    dialogRef.afterClosed().subscribe(result => {\n      console.log('The dialog was closed');\n    });\n  }\n\n\ncalculateTotal(source: MatTableDataSource<Order>){\n  let data = source.filteredData\n  var total = 0;\n  data.forEach((order) => total += order.total)\n  return total;\n  }\n\n  openEditDialog(id: number): void {\n\n    console.log(id)\n\n      \n      var dialogRef = this.dialog.open(EditOrderComponent, {\n        width: '100%',\n        height: '98%',\n        data: {\n          id: id\n        }\n      });\n\n      dialogRef.afterClosed().subscribe(result => {\n        console.log('The dialog was closed');\n      });\n    }\n\n\n\n\n\n  //one order summary no need for database\n  \n  orderSummary(order: any){\n    if(order.itemOrders != null){\n    var itemOrders = order.itemOrders;\n    itemOrders.sort((a,b) => {\n      //not working\n      return ('' + a.itemName).localeCompare(b.itemName);\n    })\n  \n\n    var summary = \"\";\n    for(let item_order of itemOrders){\n      if(item_order.amount > 0){\n          summary= summary+ item_order.amount+ \" \"\n          summary= summary+ item_order.itemName + \", \"\n      }\n  }\n}\n\n  \n  return summary;\n  }\n \n\n\nprintPage(){\n  const html: HTMLElement = document.getElementById('orderAmountTable')\n\n  //this.dataService.sendDataToPrint(html.innerHTML)\n\n}\n\n@ViewChild('firstTableSort') public secondTableSort: MatSort;\n@ViewChild('secondTableSort') public firstTableSort: MatSort;\n@ViewChild('thirdTableSort') public thirdTableSort: MatSort;\n\n\nngAfterViewInit() {\n  this.ordersByDate.sort = this.firstTableSort\n  this.orderItemCounts.sort = this.thirdTableSort\n  this.all_orders.sort = this.secondTableSort\n}\n\n\n//filter stuff\ncustomFilterPredicate(data: any, filter: string): boolean {    \n  const filterObject = JSON.parse(filter);\n  const first_name = data.first_name.toString().trim().toLowerCase().indexOf(filterObject.searchText.toLowerCase()) !== -1;\n  const last_name = data.last_name.toString().trim().toLowerCase().indexOf(filterObject.searchText.toLowerCase()) !== -1;\n  return data.date == filterObject.date && (first_name || last_name)\n\n}\n\n\n\n}\n","<div class=\"container-fluid mt-3\">\n    <div class=\"row no-print\">\n        <div class=\"col-sm header-bar\">\n            <button (click)=\"openDialog()\" class=\" btn btn-primary v-top\">New Order</button>\n\n\n            <mat-form-field class=\"ml-2\">\n                <input matInput autocomplete=\"off\" placeholder=\"Filter items\" (keyup)=\"updateSearch($event.target.value)\">\n            </mat-form-field>\n\n            <mat-form-field class=\"ml-2 mr-2\" [class.hidden-item]=\"activeTab == 'All Orders'\">\n                <mat-label>Choose a date</mat-label>\n                <input matInput [matDatepicker]=\"picker\" (dateChange)=\"onDateSelected($event)\" [formControl]=\"dateForm\">\n                <mat-datepicker-toggle matSuffix [for]=\"picker\"></mat-datepicker-toggle>\n                <mat-datepicker #picker></mat-datepicker>\n            </mat-form-field>\n        </div>\n    </div>\n    <div class=\"row\">\n        <div class=\"col-sm\">\n            <mat-tab-group (selectedTabChange)=\"onTabChange($event)\">\n                <mat-tab label=\"All Orders\">\n                    <table mat-table #firstTable #firstTableSort=\"matSort\" [dataSource]=\"all_orders\" matSort class=\"mat-elevation-z8 mt-3 table-max\">\n                        <ng-container matColumnDef=\"first_name\">\n                            <th mat-header-cell *matHeaderCellDef mat-sort-header> First Name </th>\n                            <td mat-cell *matCellDef=\"let item\"> {{item.first_name}} </td>\n                        </ng-container>\n                        <ng-container matColumnDef=\"last_name\">\n                            <th mat-header-cell *matHeaderCellDef mat-sort-header> Last Name </th>\n                            <td mat-cell *matCellDef=\"let item\"> {{item.last_name}} </td>\n                        </ng-container>\n                        <ng-container matColumnDef=\"telephone\">\n                            <th mat-header-cell *matHeaderCellDef mat-sort-header> telephone </th>\n                            <td mat-cell *matCellDef=\"let item\"> {{item.telephone}} </td>\n                        </ng-container>\n\n                        <!-- Count -->\n                        <ng-container matColumnDef=\"summary\">\n                            <th mat-header-cell *matHeaderCellDef> Summary </th>\n                            <td mat-cell *matCellDef=\"let item\"> {{ orderSummary(item)}} </td>\n                        </ng-container>\n                        <ng-container matColumnDef=\"total\">\n                            <th mat-header-cell *matHeaderCellDef mat-sort-header> Price </th>\n                            <td mat-cell *matCellDef=\"let item\"> {{ item.total | currency }} </td>\n                        </ng-container>\n                        <ng-container matColumnDef=\"date\">\n                            <th mat-header-cell *matHeaderCellDef mat-sort-header> Date </th>\n                            <td mat-cell *matCellDef=\"let item\"> {{ item.date | date :'mediumDate'}} </td>\n                        </ng-container>\n                        <ng-container matColumnDef=\"details\">\n                            <th mat-header-cell *matHeaderCellDef mat-sort-header class=\"no-print\"> Details </th>\n                            <td class=\"no-print\" mat-cell *matCellDef=\"let item\"> <button (click)=\"openEditDialog(item.id)\" class=\"btn btn-primary\">Edit</button> </td>\n                        </ng-container>\n\n\n\n\n                        <tr mat-header-row *matHeaderRowDef=\"displayedAllOrderColumns\"></tr>\n                        <tr mat-row *matRowDef=\"let row; columns: displayedAllOrderColumns;\"></tr>\n                    </table>\n                </mat-tab>\n                <mat-tab label=\"Orders for Date\">\n                    <table mat-table #secondTable #secondTableSort=\"matSort\" [dataSource]=\"ordersByDate\" matSort class=\"mat-elevation-z8 mt-3 table-max\">\n                        <ng-container matColumnDef=\"first_name\">\n                            <th mat-header-cell *matHeaderCellDef mat-sort-header> First Name </th>\n                            <td mat-cell *matCellDef=\"let item\"> {{item.first_name}} </td>\n                            <td mat-footer-cell *matFooterCellDef></td>\n                        </ng-container>\n                        <ng-container matColumnDef=\"last_name\">\n                            <th mat-header-cell *matHeaderCellDef mat-sort-header> Last Name </th>\n                            <td mat-cell *matCellDef=\"let item\"> {{item.last_name}} </td>\n                            <td mat-footer-cell *matFooterCellDef></td>\n                        </ng-container>\n                        <ng-container matColumnDef=\"telephone\">\n                            <th mat-header-cell *matHeaderCellDef mat-sort-header> telephone </th>\n                            <td mat-cell *matCellDef=\"let item\"> {{item.telephone}} </td>\n                            <td mat-footer-cell *matFooterCellDef></td>\n                        </ng-container>\n\n                        <!-- Count -->\n                        <ng-container matColumnDef=\"summary\">\n                            <th mat-header-cell *matHeaderCellDef> Summary </th>\n                            <td mat-cell *matCellDef=\"let item\"> {{ orderSummary(item)}} </td>\n                            <td mat-footer-cell *matFooterCellDef></td>\n                        </ng-container>\n                        <ng-container matColumnDef=\"total\">\n                            <th mat-header-cell *matHeaderCellDef mat-sort-header> Price </th>\n                            <td mat-cell *matCellDef=\"let item\"> {{ item.total | currency }} </td>\n                            <td mat-footer-cell *matFooterCellDef> <b>{{calculateTotal(ordersByDate) | currency}} </b></td>\n                        </ng-container>\n                        <ng-container matColumnDef=\"details\">\n                            <th mat-header-cell *matHeaderCellDef mat-sort-header class=\"no-print\"> Details </th>\n                            <td mat-cell *matCellDef=\"let item\"> <button (click)=\"openEditDialog(item.id)\" class=\"no-print btn btn-primary\">Edit</button> </td>\n                            <td mat-footer-cell *matFooterCellDef></td>\n                        </ng-container>\n\n\n\n\n                        <tr mat-header-row *matHeaderRowDef=\"displayedOrderColumns\"></tr>\n                        <tr mat-row *matRowDef=\"let row; columns: displayedOrderColumns;\"></tr>\n                        <tr mat-footer-row *matFooterRowDef=\"displayedOrderColumns\"></tr>\n                    </table>\n                </mat-tab>\n                <mat-tab label=\"Production Quantities\">\n\n                    <table id=\"orderAmountTable\" #thirdTable #thirdTableSort=\"matSort\" mat-table [dataSource]=\"orderItemCounts\" matSort class=\"mat-elevation-z8 mt-3 table-max\">\n\n                        <!-- Item name -->\n                        <ng-container matColumnDef=\"name\">\n                            <th mat-header-cell *matHeaderCellDef mat-sort-header> Name </th>\n                            <td mat-cell *matCellDef=\"let item\"> {{item.name}} </td>\n                        </ng-container>\n\n                        <!-- Count -->\n                        <ng-container matColumnDef=\"amount\">\n                            <th mat-header-cell *matHeaderCellDef mat-sort-header> Count </th>\n                            <td mat-cell *matCellDef=\"let item\"> {{item.amount}} </td>\n                        </ng-container>\n\n\n\n                        <tr mat-header-row *matHeaderRowDef=\"displayedColumns\"></tr>\n                        <tr mat-row *matRowDef=\"let row; columns: displayedColumns;\"></tr>\n                    </table>\n                </mat-tab>\n            </mat-tab-group>\n        </div>\n    </div>\n</div>","import { ChangeDetectorRef, Component, NgZone, OnInit, ViewChild } from '@angular/core';\nimport { ɵBrowserDomAdapter } from '@angular/platform-browser';\nimport {MatDialog, MatDialogRef, MAT_DIALOG_DATA} from '@angular/material/dialog';\nimport {MatTableDataSource} from '@angular/material/table'\nimport { AddItemComponent } from '../add-item/add-item.component';\nimport { ItemsService } from '../services/items.service';\nimport {Item} from '../models/item.model'\nimport { DataService } from '../services/data.service';\nimport { EditItemComponent } from '../edit-item/edit-item.component';\nimport { MatSort } from '@angular/material/sort';\n\n@Component({\n  selector: 'app-items',\n  templateUrl: './items.component.html',\n  styleUrls: ['./items.component.scss']\n})\nexport class ItemsComponent implements OnInit {\n\n  errorMessage: string\n\n  constructor(private itemService: ItemsService,public dialog: MatDialog, private changeDetection: ChangeDetectorRef, private zone: NgZone) { }\n\n  dataSource: MatTableDataSource<Item> = new MatTableDataSource<Item>()\n\n  ngOnInit(): void {\n\n    console.log('init')\n\n    this.dataSource.data = this.itemService.items\n\n\n    this.itemService.itemsSubject.subscribe((items: Item[]) => {\n\n      this.dataSource.data = items.sort((a,b) => {\n        return +b.id - +a.id\n      })\n\n      this.changeDetection.detectChanges()\n    })\n\n  }\n\n  displayedItemColumns = [\"name\", \"item_type\", \"price\", \"edit\"]\n\n  openDialog(): void {\n    const dialogRef = this.dialog.open(AddItemComponent, {\n      width: '250px',\n    });\n\n    dialogRef.afterClosed().subscribe(result => {\n      //refresh table\n      this.errorMessage = result\n    });\n  }\n\n\n  editItemDialog(item: Item): void {\n\n    console.log(item)\n\n    var dialogRef\n    this.zone.run(() => {\n      \n      dialogRef = this.dialog.open(EditItemComponent, {\n        width: '250px',\n        data: {\n          item: item\n        }\n      });\n    })\n\n\n\n\n    dialogRef.afterClosed().subscribe(result => {\n      console.log('The dialog was closed');\n    });\n  }\n  @ViewChild(MatSort) sort: MatSort;\n\n  ngAfterViewInit() {\n    this.dataSource.sort = this.sort;\n  }\n\n\n\n}\n\n","<div class=\"container-fluid\">\n\n    <div *ngIf=\"errorMessage\" class=\"alert alert-danger\">\n        <p>{{errorMessage}}</p>\n    </div>\n    <div class=\"row\">\n        <div class=\"col-sm mt-3\">\n            <button (click)=\"openDialog()\" class=\"btn btn-primary\">Add Item</button>\n            <table mat-table [dataSource]=\"dataSource\" matSort class=\"table-max mat-elevation-z8 mt-3 table-max\">\n                <ng-container matColumnDef=\"name\">\n                    <th mat-header-cell *matHeaderCellDef mat-sort-header>Name </th>\n                    <td mat-cell *matCellDef=\"let item\"> {{item.name | capitalize}} </td>\n                </ng-container>\n                <!-- Item name -->\n                <ng-container matColumnDef=\"item_type\">\n                    <th mat-header-cell *matHeaderCellDef mat-sort-header> type </th>\n                    <td mat-cell *matCellDef=\"let item\"> {{item.item_type | capitalize}} </td>\n                </ng-container>\n\n                <!-- Count -->\n                <ng-container matColumnDef=\"price\">\n                    <th mat-header-cell *matHeaderCellDef mat-sort-header> price </th>\n                    <td mat-cell *matCellDef=\"let item\"> {{item.price |currency }} </td>\n                </ng-container>\n                <ng-container matColumnDef=\"edit\">\n                    <th mat-header-cell *matHeaderCellDef mat-sort-header> </th>\n                    <td mat-cell *matCellDef=\"let item\"> <button class=\"btn btn-primary\" (click)=\"editItemDialog(item)\">Edit</button> </td>\n                </ng-container>\n\n\n\n                <tr mat-header-row *matHeaderRowDef=\"displayedItemColumns\"></tr>\n                <tr mat-row *matRowDef=\"let row; columns: displayedItemColumns;\"></tr>\n            </table>\n        </div>\n\n\n    </div>","import { Component, OnInit } from '@angular/core';\nimport { AuthService } from './auth.service';\nimport { DataService } from './services/data.service';\nimport { ItemsService } from './services/items.service';\n\n\n@Component({\n  selector: 'app-root',\n  templateUrl: './app.component.html',\n  styleUrls: ['./app.component.scss']\n})\nexport class AppComponent implements OnInit {\n  title = 'lpdv';\n  isCollapsed = true;\n\n\n  constructor(private dataService: DataService, private authService: AuthService){\n\n  }\n\n  ngOnInit(){\n    this.authService.autoLogin()\n    console.log('getting data')\n    //this.dataService.getStoredData()\n  }\n\n  logout(){\n    this.authService.logout()\n  }\n}\n","<nav class=\"navbar navbar-expand-lg navbar-light bg-light\">\n    <a class=\"navbar-brand\" href=\"#\">Le Pain Dans les Voiles</a>\n    <button class=\"navbar-toggler\" type=\"button\" data-toggle=\"collapse\" data-target=\"#navbarSupportedContent\" aria-controls=\"navbarSupportedContent\" aria-expanded=\"false\" aria-label=\"Toggle navigation\" (click)=\"isCollapsed = !isCollapsed\">\n    <span class=\"navbar-toggler-icon\"></span>\n  </button>\n\n    <div [isAnimated]=\"true\" [collapse]=\"isCollapsed\" class=\"collapse navbar-collapse\" id=\"navbarSupportedContent\">\n        <ul class=\"navbar-nav mr-auto\">\n            <li class=\"nav-item \" [routerLinkActiveOptions]=\"{ exact: true }\" routerLinkActive=\"active\">\n                <a class=\"nav-link\" routerLink=\"\">Dashboard</a>\n            </li>\n            <li class=\"nav-item\" routerLinkActive=\"active\">\n                <a class=\"nav-link\" routerLink=\"items\">Items</a>\n            </li>\n        </ul>\n        <ul class=\"navbar-nav navbar-right\">\n            <li class=\"nav-item \" [routerLinkActiveOptions]=\"{ exact: true }\" routerLinkActive=\"active\">\n                <a class=\"nav-link\" type=\"button\" (click)=\"logout()\">Logout</a>\n            </li>\n        </ul>\n    </div>\n</nav>\n\n\n\n<router-outlet></router-outlet>","import { Component, Inject, NgZone, OnInit } from '@angular/core';\nimport { FormBuilder, FormGroup, Validators } from '@angular/forms';\nimport { MatDialogRef, MAT_DIALOG_DATA } from '@angular/material/dialog';\nimport { Item } from '../models/item.model';\nimport { DataService } from '../services/data.service';\nimport { ItemsService } from '../services/items.service';\n\n@Component({\n  selector: 'app-edit-item',\n  templateUrl: './edit-item.component.html',\n  styleUrls: ['./edit-item.component.scss']\n})\nexport class EditItemComponent implements OnInit {\n\n  myForm: FormGroup;\n\n  loading = false;\n  success = false;\n  item: Item\n\n  //types of foods\n  types: any[] = [\n    {value: 'viennoiserie', viewValue: 'Viennoiserie'},\n    {value: 'pains', viewValue: 'Pains'},\n    {value: 'noel', viewValue: 'Nöel'}\n  ];\n  tax_classifications: any[] = [\n    {value: 'normal', viewValue: 'normal'},\n    {value: 'no_tax_6', viewValue: 'tax before 6'},\n    {value: 'no_tax', viewValue: 'no tax'},\n  ]\n\n  constructor(private itemService: ItemsService, private fb: FormBuilder, private dialogRef: MatDialogRef<EditItemComponent>, @Inject(MAT_DIALOG_DATA) data) {\n    console.log(data)\n    this.item = data.item\n   }\n\n  ngOnInit(): void {\n\n    this.myForm = this.fb.group({\n      name: [this.item.name, Validators.required],\n      item_type: [this.item.item_type, Validators.required],\n      price: [this.item.price, Validators.required],\n      sliced: [this.item.sliced, Validators.required],\n      tax_catagory: [this.item.tax_catagory, Validators.required]\n    });\n  }\n\n  async submitHandler() {\n    this.loading = true;\n\n    const formValue: Item = this.myForm.value;\n\n    try {\n      //use this object to create product\n\n      const item: Item = Item.newItem(formValue)\n      item.id = this.item.id\n      item.user_id = this.item.user_id\n\n      this.itemService.editItem(item).subscribe(res => {\n        console.log(res)\n      })\n      //this.dataService.saveItem(item)\n      this.success = true;\n      this.dialogRef.close()\n    } catch(err) {\n      console.error(err)\n    }\n\n    this.loading = false;\n    \n  }\n\n  delete(){\n\n    this.itemService.deleteItem(this.item).subscribe(res => {\n      console.log(res)\n    })\n\n    this.dialogRef.close()\n  }\n\n}\n","<H1>\n    Edit Item</H1>\n<form [formGroup]=\"myForm\" (ngSubmit)=\"submitHandler()\">\n\n    <mat-form-field>\n        <input matInput placeholder=\"name\" formControlName=\"name\">\n    </mat-form-field>\n    <mat-form-field appearance=\"fill\">\n        <mat-label>Type of item</mat-label>\n        <mat-select formControlName=\"item_type\">\n            <mat-option *ngFor=\"let type of types\" [value]=\"type.value\">\n                {{type.viewValue}}\n            </mat-option>\n        </mat-select>\n    </mat-form-field>\n    <mat-form-field appearance=\"fill\">\n        <mat-label>Tax classification</mat-label>\n        <mat-select formControlName=\"tax_catagory\">\n            <mat-option *ngFor=\"let type of tax_classifications\" [value]=\"type.value\">\n                {{type.viewValue}}\n            </mat-option>\n        </mat-select>\n    </mat-form-field>\n    <mat-form-field appearance=\"fill\">\n        <mat-select formControlName=\"sliced\">\n            <mat-option [value]=\"false\">\n                No Slice Option\n            </mat-option>\n            <mat-option [value]=\"true\">\n                Include sliced Option\n            </mat-option>\n        </mat-select>\n    </mat-form-field>\n    <mat-form-field>\n        <input matInput placeholder=\"price\" formControlName=\"price\">\n    </mat-form-field>\n\n    <button mat-button class=\"btn btn-primary\" color=\"primary\" type=\"submit\" [disabled]=\"myForm.invalid\">Save Item</button>\n    <button mat-button class=\"ml-2 btn btn-danger\" color=\"primary\" type=\"button\" (click)=\"delete()\">Delete</button>\n</form>","\nexport class User{\n\n    private expiaryTime: Date\n    constructor(\n        //bakery name\n        public id: string,\n        public name: string,\n        public token: string\n    ){}\n\n    setExpiaryTime(issuedTime: number){\n        console.log(issuedTime)\n        this.expiaryTime = new Date(0)\n        this.expiaryTime.setUTCSeconds(issuedTime+86400)\n        console.log(this.expiaryTime)\n    }\n\n    getToken(){\n        if(this.expiaryTime > new Date()){\n            return this.token\n        }else{\n            return null\n        }\n    }\n}","import { NgModule } from '@angular/core';\nimport {RouterModule, Routes, RoutesRecognized} from \"@angular/router\";\nimport { AddItemComponent } from './add-item/add-item.component';\nimport { AuthGaurdService } from './auth-gaurd.service';\nimport { DashboardComponent } from './dashboard/dashboard.component';\nimport { ItemsComponent } from './items/items.component';\nimport {LoginComponent} from './login/login.component'\nimport {RegisterComponent} from './register/register.component'\nimport {LoginGaurdService} from './login-gaurd.service'\n\n\nconst appRoutes: Routes = [\n\n    {path: \"\", redirectTo: 'login', pathMatch: 'full'},\n    {path: \"login\", component: LoginComponent, canActivate: [LoginGaurdService]},\n    {path: \"register\", component: RegisterComponent, canActivate: [LoginGaurdService]},\n    {path: \"dashboard\", component: DashboardComponent, canActivate: [AuthGaurdService] },\n    {path: \"items\", component: ItemsComponent, canActivate: [AuthGaurdService]},\n    {path: \"items/addItem\", component: AddItemComponent, canActivate: [AuthGaurdService]}\n\n];\n@NgModule({\n    imports: [RouterModule.forRoot(appRoutes)],\n    exports: [RouterModule]\n})\n\nexport class RoutingModule{\n\n}","import { BrowserModule } from '@angular/platform-browser';\nimport { NgModule } from '@angular/core';\nimport {MatToolbarModule} from '@angular/material/toolbar';\nimport {MatMenuModule} from '@angular/material/menu';\nimport { CollapseModule } from 'ngx-bootstrap/collapse';\nimport {MatSelectModule} from '@angular/material/select';\nimport {HTTP_INTERCEPTORS} from '@angular/common/http'\n\nimport { AppComponent } from './app.component';\nimport { BrowserAnimationsModule } from '@angular/platform-browser/animations';\nimport { DashboardComponent } from './dashboard/dashboard.component';\nimport { ItemsComponent } from './items/items.component';\nimport { RoutingModule } from './router.module';\nimport {MatIconModule} from '@angular/material/icon';\nimport {MatTableModule} from '@angular/material/table';\nimport { AddItemComponent } from './add-item/add-item.component';\nimport {MatDialogModule} from '@angular/material/dialog';\nimport { ReactiveFormsModule } from '@angular/forms';\nimport { MatInputModule } from '@angular/material/input';\nimport { NewOrderComponent } from './new-order/new-order.component';\nimport { MatFormFieldModule } from \"@angular/material/form-field\";\nimport {MatDatepickerModule} from '@angular/material/datepicker';\nimport { MatNativeDateModule } from '@angular/material/core';\nimport { EditOrderComponent } from './edit-order/edit-order.component';\nimport {EditItemComponent} from './edit-item/edit-item.component'\nimport {MatTabsModule} from '@angular/material/tabs';\nimport { LoginComponent } from './login/login.component';\nimport { RegisterComponent } from './register/register.component';\nimport {FormsModule} from '@angular/forms'\nimport {HttpClientModule} from '@angular/common/http'\nimport {AuthInterceptorService} from './auth-interceptor.service'\nimport {MatSortModule} from '@angular/material/sort';\nimport { CapitalizePipe } from './pipes/capitalize.pipe';\nimport { SearchFilterPipe } from './pipes/search-filter.pipe';\n\n\n\n\n\n\n\n@NgModule({\n  declarations: [\n    AppComponent,\n    DashboardComponent,\n    ItemsComponent,\n    AddItemComponent,\n    NewOrderComponent,\n    EditOrderComponent,\n    EditItemComponent,\n    LoginComponent,\n    RegisterComponent,\n    CapitalizePipe,\n    SearchFilterPipe,\n  ],\n  imports: [\n    FormsModule,\n    BrowserModule,\n    BrowserAnimationsModule,\n    MatToolbarModule,\n    RoutingModule,\n    MatIconModule,\n    MatMenuModule,\n    CollapseModule.forRoot(),\n    MatTableModule,\n    MatDialogModule,\n    ReactiveFormsModule,\n    MatInputModule,\n    MatSelectModule,\n    MatFormFieldModule,\n    MatDatepickerModule,\n    MatNativeDateModule,\n    MatTabsModule,\n    HttpClientModule,\n    MatSortModule,\n\n  ],\n  providers: [\n    {provide: HTTP_INTERCEPTORS, useClass: AuthInterceptorService, multi: true}\n  ],\n  bootstrap: [AppComponent]\n})\nexport class AppModule { }\n","import { Injectable, OnInit} from '@angular/core';\nimport { Subject, throwError } from 'rxjs';\nimport { catchError, tap} from 'rxjs/operators';\nimport { Item } from '../models/item.model';\nimport {HttpClient, HttpErrorResponse} from '@angular/common/http';\nimport { AuthService } from '../auth.service';\n\n\n \n\n@Injectable({\n  providedIn: 'root'\n})\n\n\nexport class ItemsService implements OnInit{\n\n\n  items: Item[] = []\n  itemsSubject: Subject<Item[]> = new Subject<Item[]>()\n\n  constructor(private http: HttpClient, private authService: AuthService) { \n    \n  }\n  ngOnInit(){\n    this.authService.user.subscribe(user => {\n      if(user){\n        this.fetchItems().subscribe(res => {\n          console.log(res)\n        })\n      }\n    })\n  }\n\n  addItem(item: Item){\n    //assign user id to item\n    item.name = item.name.toLowerCase()\n\n    this.authService.user.subscribe(user => {\n      console.log(user)\n      item.user_id = user.id;\n    })\n\n    return this.http.post<Item>('/api/items/add', item).pipe(catchError(this.handleErrors), tap(res => {\n      this.items.push(res)\n      this.itemsSubject.next(this.items)\n    }))\n    \n  }\n\n\n  fetchItems(){\n    console.log(\"getting items\")\n    return this.http.get('/api/items').pipe(catchError(this.handleErrors), tap(res => {\n\n      this.items = []\n      for(let item of res['items']){\n        this.items.push(item)\n      }\n\n      this.itemsSubject.next(this.items)\n    }))\n  }\n\n  editItem(item: Item){\n\n    console.log(item)\n    item.name = item.name.toLowerCase()\n    return this.http.put('api/items', item).pipe(catchError(this.handleErrors), tap(res => {\n\n      this.items = this.items.map((item: Item) => {\n        if(item.id === res['id']){\n          return Item.newItem(res)\n        }else{\n          return Item.newItem(item)\n        }\n      })\n\n      this.itemsSubject.next(this.items)\n    }))\n  }\n\n  deleteItem(item: Item){\n\n    return this.http.delete('api/items/'+item.id).pipe(catchError(this.handleErrors), tap(res => {\n\n      this.items = this.items.filter(item => {\n        return !(item.id === res['id'])\n      })\n      this.itemsSubject.next(this.items)\n    }))\n\n  }\n\n\n\n  handleErrors(errorRes: HttpErrorResponse){\n\n\n    let errorMessage = \"an unknown error occured\"\n\n    if(!errorRes.error || !errorRes.error.error){\n      return throwError(errorRes)\n    }\n\n    switch(errorRes.error.error){\n      case \"ITEM_EXISTS\":\n        errorMessage = \"The item already exists\"\n\n    }\n\n    throw(errorMessage)\n\n}\n\n  \n}\n","import { Component, EventEmitter, OnInit, Output } from '@angular/core';\nimport { FormBuilder, FormGroup, Validators } from '@angular/forms';\nimport { MatDialogRef } from '@angular/material/dialog';\nimport { Item } from '../models/item.model';\nimport { DataService } from '../services/data.service';\nimport { ItemsService } from '../services/items.service';\n\n@Component({\n  selector: 'app-add-item',\n  templateUrl: './add-item.component.html',\n  styleUrls: ['./add-item.component.scss']\n})\nexport class AddItemComponent implements OnInit {\n\n  myForm: FormGroup;\n\n  errorMessage: string\n  loading = false;\n  success = false;\n\n  //types of foods\n  types: any[] = [\n    {value: 'viennoiserie', viewValue: 'Viennoiserie'},\n    {value: 'pains', viewValue: 'Pains'},\n    {value: 'noel', viewValue: 'Nöel'},\n  ];\n  tax_classifications: any[] = [\n    {value: 'normal', viewValue: 'normal'},\n    {value: 'no_tax_6', viewValue: 'tax before 6'},\n    {value: 'no_tax', viewValue: 'no tax'},\n  ]\n\n  constructor(private itemsService: ItemsService, private fb: FormBuilder, private dialogRef: MatDialogRef<AddItemComponent>) { }\n\n  ngOnInit(): void {\n    this.myForm = this.fb.group({\n      name: ['', Validators.required],\n      item_type: ['', Validators.required],\n      price: ['', Validators.required],\n      sliced: ['', Validators.required],\n      tax_catagory: ['', Validators.required]\n    });\n  }\n\n  async submitHandler() {\n    this.loading = true;\n\n    const formValue: Item = this.myForm.value;\n\n    try {\n      //use this object to create product\n      console.log(formValue)\n      const item: Item = Item.newItem(formValue)\n      //this will verify that sliced and non sliced items can be called for the same item\n      item.name = item.name.toLowerCase()\n      item.combined_name = item.name\n          //if sliced duplicate \n      if(item.sliced){\n        item.sliced_option = true\n        let item2 = Item.newItem(item)\n       item2.sliced = true\n       item.sliced = false\n        item2.name = item2.name + \" Tr.\"\n        this.itemsService.addItem(item2).subscribe(\n          response => {\n            console.log(response)\n            this.dialogRef.close()\n          }, errorRes => {\n            console.log(errorRes)\n            this.dialogRef.close(errorRes)\n          }\n        )\n\n      }else{\n        item.sliced_option = false\n      }\n      \n      \n      this.itemsService.addItem(item).subscribe(\n        response => {\n          console.log(response)\n          this.dialogRef.close()\n        }, errorRes => {\n          console.log(errorRes)\n          this.dialogRef.close(errorRes)\n        }\n      )\n      //this.dataService.addItem(item)\n      this.success = true;\n\n    } catch(err) {\n      console.error(err)\n    }\n\n    this.loading = false;\n    \n  }\n\n}\n","<H1>Add a new Item</H1>\n\n<form [formGroup]=\"myForm\" (ngSubmit)=\"submitHandler()\">\n\n    <mat-form-field>\n        <input matInput placeholder=\"name\" formControlName=\"name\">\n    </mat-form-field>\n    <mat-form-field appearance=\"fill\">\n        <mat-label>Type of item</mat-label>\n        <mat-select formControlName=\"item_type\">\n            <mat-option *ngFor=\"let type of types\" [value]=\"type.value\">\n                {{type.viewValue}}\n            </mat-option>\n        </mat-select>\n    </mat-form-field>\n    <mat-form-field appearance=\"fill\">\n        <mat-label>Tax classification</mat-label>\n        <mat-select formControlName=\"tax_catagory\">\n            <mat-option *ngFor=\"let type of tax_classifications\" [value]=\"type.value\">\n                {{type.viewValue}}\n            </mat-option>\n        </mat-select>\n    </mat-form-field>\n    <mat-form-field appearance=\"fill\">\n        <mat-select formControlName=\"sliced\">\n            <mat-option [value]=\"false\">\n                No Slice Option\n            </mat-option>\n            <mat-option [value]=\"true\">\n                Include sliced Option\n            </mat-option>\n        </mat-select>\n    </mat-form-field>\n    <mat-form-field>\n        <input matInput placeholder=\"price\" formControlName=\"price\">\n    </mat-form-field>\n\n    <button mat-button class=\"btn btn-primary\" color=\"primary\" type=\"submit\" [disabled]=\"myForm.invalid\">Add Item</button>\n</form>","import { Injectable } from '@angular/core';\nimport {HttpClient, HttpErrorResponse} from '@angular/common/http'\nimport {catchError, tap} from 'rxjs/operators'\nimport { BehaviorSubject, throwError } from 'rxjs';\nimport { User } from './models/user.model';\nimport jwt_decode from 'jwt-decode'\nimport { Router } from '@angular/router';\nimport { ItemsService } from './services/items.service';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class AuthService {\n\n  user: BehaviorSubject<User> = new BehaviorSubject<User>(null)\n  tokenExpirationTimer: any\n\n  constructor(private http: HttpClient, private router: Router) { }\n\n\n  signup(username: string, password:string){\n    return this.http.post<User>('/api/user/register', {\n      name: username,\n      password: password\n  }).pipe(catchError(this.handleErrors), tap(resData => {\n    this.handleAuthentication(resData.id, resData.name, resData.token)\n    }))\n\n  }\n\n  login(username: string, password: string){\n    return this.http.post<User>('/api/user/login', {\n      name: username,\n      password: password\n    } ).pipe(catchError(this.handleErrors), tap(resData => {\n    this.handleAuthentication(resData.id, resData.name, resData.token)\n    }))\n  }\n\n\n  handleAuthentication(id: string, name: string, token: string){\n\n    const data = jwt_decode(token)\n\n\n    const user = new User(id, name, token)\n    //user.setExpiaryTime(Date(data['iat']))\n    user.setExpiaryTime(data['iat'])\n\n    this.user.next(new User(id, name, token))\n\n    localStorage.setItem('userData', JSON.stringify(user))\n\n    this.autoLogout()\n\n  }\n\n  autoLogin(){\n\n    if(localStorage.getItem('userData')){\n\n      const {id, name, token, expiaryTime} = JSON.parse(localStorage.getItem('userData'))\n\n      const user = new User(id, name, token)\n\n      const expiaryDate = new Date(expiaryTime).getTime()/1000\n      user.setExpiaryTime(expiaryDate)\n\n      if(user.getToken()){\n        this.user.next(user)\n        this.router.navigate(['/dashboard'])\n        console.log('login worked')\n        this.autoLogout()\n\n      }else{\n        console.log('the token expired')\n      }\n    }else{\n      console.log('no user data saved')\n    }\n\n\n\n\n\n  }\n\n  autoLogout(){\n    this.tokenExpirationTimer = setTimeout(() => {\n      this.logout()\n    }, 86400000)\n  }\n\n  logout(){\n\n    console.log('logout called')\n    this.user.next(null)\n    this.router.navigate(['/login'])\n    localStorage.removeItem('userData')\n    if(this.tokenExpirationTimer){\n      clearTimeout(this.tokenExpirationTimer)\n    }\n  }\n\n\n  handleErrors(errorRes: HttpErrorResponse){\n\n\n      let errorMessage = \"an unknown error occured\"\n\n      if(!errorRes.error || !errorRes.error.error){\n        return throwError(errorRes)\n      }\n\n      switch(errorRes.error.error){\n        case \"USER_EXISTS\":\n          errorMessage = \"This user already exists\"\n          break;\n        case 'INVALID_USERNAME':\n          errorMessage = \"Invalid username or password\"\n          break;\n        case 'INVALID_PASSWORD':\n          errorMessage = \"Invalid username or password\"\n          break;\n        case 'ACCESS_DENIED':\n          errorMessage = \"Invalid creddentials\"\n          break;\n        case 'INVALID_TOKEN':\n          errorMessage = \"Invalid creddentials\"\n          break;\n  \n      }\n\n      throw(errorMessage)\n\n  }\n}\n","import { Injectable } from '@angular/core';\nimport { Subject, throwError } from 'rxjs';\nimport { DataService } from './data.service';\nimport {SENDING_ITEM, GET_KEYS, RESPONSE_KEYS, REQUEST_ITEM, RESPONSE_ITEM} from '../../message-types'\nimport { Order } from '../models/order.model';\nimport { AuthService } from '../auth.service';\nimport { User } from '../models/user.model';\nimport { HttpClient, HttpErrorResponse } from '@angular/common/http';\nimport {catchError, tap} from 'rxjs/operators'\nimport { ItemOrdersService } from './item-orders.service';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class OrderService {\n\n\n  orders: Order[] = []\n  orderChangedSubject: Subject<Order[]> = new Subject<Order[]>()\n\n\n  constructor(private itemOrderService: ItemOrdersService,private authService: AuthService, private http: HttpClient) {\n    \n   }\n\n  addOrder(order: Order){\n    console.log('order: ')\n    console.log(order)\n    //assign user id to item\n    this.authService.user.subscribe((user: User)=> {\n      console.log(user)\n      order.user_id = user.id\n    })\n\n    console.log(order)\n    return this.http.post<Order>('/api/orders/add', order).pipe(catchError(this.handleErrors), tap(res => {\n      console.log(res)\n    }))\n  }\n\n  getOrders(){\n    return this.http.get('/api/orders').pipe(catchError(this.handleErrors), tap(res => {\n      this.orders = []\n\n      for(let order of res['orders']){\n        this.orders.push(Order.newOrder(order))\n      }\n      this.orderChangedSubject.next(this.orders)\n    }))\n  }\n\n  editOrder(order: Order){\n\n    return this.http.put<Order>('api/orders', order).pipe(catchError(this.handleErrors), tap(res => {\n\n      console.log(res)\n    }))\n  }\n\n  deleteOrder(order: Order){\n    console.log('deleting')\n\n    this.itemOrderService.deleteItemOrdersForOrder(order.id)\n\n    return this.http.delete('api/orders/'+order.id).pipe(catchError(this.handleErrors), tap(res => {\n\n      this.orders= this.orders.filter(item => {\n        return !(item.id === res['id'])\n      })\n      this.orderChangedSubject.next(this.orders)\n    }))\n  }\n\n  getOrderById(id){\n    for(let order of this.orders){\n      if(order.id === id){\n        return order\n      }\n    }\n  }\n\n\n\n\n  handleErrors(errorRes: HttpErrorResponse){\n\n\n    let errorMessage = \"an unknown error occured\"\n\n    if(!errorRes.error || !errorRes.error.error){\n      return throwError(errorRes)\n    }\n\n    switch(errorRes.error.error){\n      case \"ITEM_EXISTS\":\n        errorMessage = \"The item already exists\"\n\n    }\n\n    throw(errorMessage)\n\n}\n}\n","import { DataService } from '../services/data.service';\nimport { ItemOrder } from './item_order.model';\n\nexport class Order{\n\n    summary: string\n    orderNumber: number\n    itemOrders: ItemOrder[]\n\n    constructor(\n        public id: string,\n        public user_id: string,\n        public first_name:string, \n        public last_name:string,\n        public telephone: number,\n        public date: Date,\n        public sub_total: number,\n        public tax: number,\n        public total: number\n        \n        ){\n    }\n\n    static newOrder(params: any){\n        let order = new Order(params.id, params.user_id, params.first_name, params.last_name, params.telephone,params.date, params.sub_total, params.tax,params.total )\n        order.itemOrders = params.itemOrders\n        return order\n    }\n\n    addItemOrder(itemOrder: ItemOrder){\n\n        this.itemOrders.push(itemOrder)\n\n    }\n\n}\n\n","import { Component, OnInit } from '@angular/core';\nimport jwt_decode from 'jwt-decode'\nimport {NgForm} from '@angular/forms'\nimport { Router } from '@angular/router';\nimport { AuthService } from '../auth.service';\n\n@Component({\n  selector: 'app-login',\n  templateUrl: './login.component.html',\n  styleUrls: ['./login.component.scss']\n})\nexport class LoginComponent implements OnInit {\n\n  errorMessage: string\n\n  constructor(private router: Router, private authService: AuthService) { }\n\n  ngOnInit(): void {\n\n    if(this.authService.user){\n      this.authService.autoLogin()\n    }\n  }\n\n  onSubmit(form: NgForm){\n\n    console.log(form)\n\n    const {username, password} = form.value\n\n    if(form.valid){\n\n      this.authService.login(username, password).subscribe(res => {\n        console.log(res)\n\n        \n        this.router.navigate(['/dashboard'])\n\n      }, errorRes => {\n        console.log(errorRes)\n\n        this.errorMessage = errorRes\n      })\n    }\n\n    form.reset()\n  }\n\n  signUp(){\n    this.router.navigate(['/register'])\n  }\n\n}\n","\n<div class=\"container\">\n    <div class=\"row\">\n        <div class=\"col-xs-8 col-md-6 col-md-offset-1\">\n            <div *ngIf=\"errorMessage\" class=\"alert alert-danger\">\n                <p>{{errorMessage}}</p>\n            </div>\n            <form #authForm=\"ngForm\" (ngSubmit)=\"onSubmit(authForm)\">\n                <div class=\"form-group\">\n                    <label for=\"username\">Username</label>\n                    <input\n                    type=\"text\"\n                    id=\"username\"\n                    class=\"form-control\"\n                    ngModel\n                    name=\"username\"\n                    required\n                    >\n                </div>\n                <div class=\"form-group\">\n                    <label for=\"password\">Password</label>\n                    <input\n                    type=\"password\"\n                    id=\"password\"\n                    class=\"form-control\"\n                    ngModel\n                    name=\"password\"\n                    required\n                    minlength=\"6\"\n                    >\n                </div>\n                <div>\n                    <button class=\"btn btn-primary\" type=\"submit\" [disabled]=\"authForm.invalid\">Login</button>\n                    <button class=\"btn btn-primary\" type=\"button\" (click)=\"signUp()\">Sign Up</button>\n                </div>\n            </form>\n        </div>\n    </div>\n</div>\n","export class Item{\n\n    constructor(\n        public id:string,\n        public user_id:string,\n        public name: string, \n        public combined_name,\n        public item_type: string, \n        public price: number, \n        public sliced: boolean,\n        public sliced_option: boolean,\n        public tax_catagory: string\n        ){\n\n\n    }\n    static newItem(params: any):Item{\n        let item = new Item(params.id, params.user_id, params.name, params.combined_name, params.item_type, params.price, params.sliced,params.sliced_option, params.tax_catagory);\n        \n        \n        \n        return item;\n    }\n}\n    //const {type, data} = resp_data\n\n\n","import { enableProdMode } from '@angular/core';\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\n\nimport { AppModule } from './app/app.module';\nimport { environment } from './environments/environment';\n\nif (environment.production) {\n  enableProdMode();\n}\n\nplatformBrowserDynamic().bootstrapModule(AppModule)\n  .catch(err => console.error(err));\n","import { Injectable } from \"@angular/core\";\nimport { ActivatedRouteSnapshot, CanActivate, Router, RouterStateSnapshot } from '@angular/router';\nimport { Observable } from 'rxjs';\nimport { map, tap} from 'rxjs/operators';\nimport { AuthService } from './auth.service';\n\n@Injectable({providedIn: 'root'})\n\nexport class AuthGaurdService implements CanActivate{\n\n    constructor(private authService: AuthService, private router: Router){\n\n    }\n\n    canActivate(route: ActivatedRouteSnapshot, router: RouterStateSnapshot): boolean | Promise<boolean> | Observable<boolean>{\n\n        return this.authService.user.pipe(map(user => {\n            return !!user\n        }), tap(isAuth => {\n            console.log(isAuth)\n\n            if(!isAuth){\n                this.router.navigate(['/login'])\n            }\n        }))\n    }\n}","function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncaught exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nmodule.exports = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = \"zn8P\";"],"sourceRoot":"webpack:///"}